using System;

namespace Chapter08
{
    class Program
    {
        class PointClass
        {
            public int x;
            public int y;

            public PointClass(int x, int y)
            {
                this.x = x;
                this.y = y;
            }
        }
        struct PointStruct
        {
            public int x;
            public int y;

            public PointStruct(int x, int y)
            {
                this.x = x;
                this.y = y;
            }
        }
        static void Main(string[] args)
        {
            // 클래스
            PointClass pointClassA = new PointClass(10, 20);
            PointClass pointClassB = pointClassA; // 참조 복사가 일어납니다. --> 동시에 값이 바뀜

            pointClassB.x = 100;
            pointClassB.y = 200;

            Console.WriteLine("pointClassA: " + pointClassA.x + "," + pointClassA.y);
            Console.WriteLine("pointClassB: " + pointClassB.x + "," + pointClassB.y);
            Console.WriteLine();

            // 구조체
            PointStruct pointStructA = new PointStruct(10, 20);
            PointStruct pointStructB = pointStructA; // 값 복사가 일어납니다. --> 메모리를 다시 할당을 받음 --> A와 B가 다름

            pointStructB.x = 100;
            pointStructB.y = 200;

            Console.WriteLine("pointStructA: " + pointStructA.x + "," + pointStructA.y);
            Console.WriteLine("pointStructB: " + pointStructB.x + "," + pointStructB.y);
        }
    }
}

/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*namespace Chapter08
{
    class Program
    {
        class PointClass
        {
            public int x;
            public int y;

            public PointClass(int x, int y)
            {
                this.x = x;
                this.y = y;
            }
        }
        struct PointStruct
        {
            public int x;
            public int y;

            public PointStruct(int x, int y)
            {
                this.x = x;
                this.y = y;
            }
        }
        static void Main(string[] args)
        {
            // 클래스
            PointClass pointClassA = new PointClass(10, 20);
            PointClass pointClassB = pointClassA; // 참조 복사가 일어납니다.

            pointClassB.x = 100;
            pointClassB.y = 200;

            Console.WriteLine("pointClassA: " + pointClassA.x + "," + pointClassA.y);
            Console.WriteLine("pointClassB: " + pointClassB.x + "," + pointClassB.y);
            Console.WriteLine();

            // 구조체
            PointStruct pointStructA = new PointStruct(10, 20);
            PointStruct pointStructB = pointStructA;

            pointStructB.x = 100;
            pointStructB.y = 200;

            Console.WriteLine("pointStructA: " + pointStructA.x + "," + pointStructA.y);
            Console.WriteLine("pointStructB: " + pointStructB.x + "," + pointStructB.y);
        }
    }
}*/

/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*namespace Chapter08
{
    class Program
    {
        struct Point
        {
            public int x;
            public int y;
        }
        static void Main(string[] args)
        {
            Point point;
            point.x = 10; // 구조체는 메모리 할당이라 초기화 필수
            point.y = 10; // 초기화 안하면 쓰레기값 들어감

            Console.WriteLine(point.x);
            Console.WriteLine(point.y);
        }
    }
}*/

/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*namespace Chapter08
{
    class Program
    {
        struct Point
        {
            public int x;
            public int y;
        }
        static void Main(string[] args)
        {
            Point point;
            point.x = 10;
            point.y = 10;

            Console.WriteLine(point.x);
            Console.WriteLine(point.y);
        }
    }
}*/

/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/* namespace Chapter08
{
    class Products
    {
        public int this[int i]
        {
            get
            {
                return i * i;
            }
            // Products products = new Product();
            // products[i] 할 때에 호출
            // get { return i; }
            // products[i] = 10 할 때에 호출
            // set { Console.WriteLine(i + "번째 상품 설정"); }
        }
    } 
class SquareCalculator
{
    public int this[int i]
    {
        get
        {
            return i * i;
        }
    }
}
class Program
{
    static void Main(string[] args)
    {
        SquareCalculator square = new SquareCalculator();
        Console.WriteLine(square[10]);
        Console.WriteLine(square[20]);
        Console.WriteLine(square[30]);

    }
}
} */
